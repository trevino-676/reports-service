stages:
  - test
  - build

python-test:
  image: python:3.9-alpine
  variables:
    PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  cache:
    paths:
      - .cache/pip
  stage: test
  before_script:
    - apk add --no-cache g++ make libffi-dev
    - pip install --no-cache-dir -r requirements.txt
    - cat $CONFIGFILE > .env
  script:
    - python -m pytest --junitxml=report.xml
  artifacts:
    when: always
    reports:
      junit: report.xml

docker-build-test:
  image: docker:latest
  stage: build
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE":"$CI_COMMIT_SHA" .
    - docker push "$CI_REGISTRY_IMAGE":"$CI_COMMIT_SHA"
  only:
    - test
